<pre class='metadata'>
Title: RDF Time Series Snippets
Warning: Not Ready
Shortname: RDF-TS-Snippets
Level: none
Status: LD
Repository: dylanvanassche/rdf-ts-snippets-spec
URL: https://dylanvanassche.github.io/rdf-ts-snippets-spec/
Editor: Gerald Haesendonck
Editor: Dylan Van Assche
Abstract: This document specifies how time series data with with only a few changing values
  can be described in RDF.
Markup Shorthands: markdown yes, css no
</pre>

# Introduction # {#intro}

<div class="informative">
Time series data is everywhere.
Representing time series data in RDF drastically raises the verbosity (citations...)
This document introduces Snippets: compact RDF views over time series data.

## Vocabularies used in this specification ## {#vocabularies}

| Vocabulary                                 | Prefix | IRI                                 |
| ------------------------------------------ | ------ | ----------------------------------- |
| Data Catalog Vocabulary (DCAT) - Version 3 | `dcat` | https://www.w3.org/TR/vocab-dcat-3/ |
| Semantic Sensor Network Ontology           | `sosa` | https://www.w3.org/TR/vocab-ssn/    |


## Time series data examples ## {#examples}

As an example, here are some readings of a temperature sensor that produces
a reading every hour of the day:

<div class="example" id="ex_temp">
```json
{"id": "1", "value": 5.4, "timestamp": "2024-01-01T06:00:00Z"}
{"id": "2", "value": 5.2, "timestamp": "2024-01-01T06:59:59Z"}
{"id": "3", "value": 5.2, "timestamp": "2024-01-01T08:00:02Z"}
{"id": "4", "value": 6.1, "timestamp": "2024-01-01T09:00:00Z"}
```
</div>

To save network bandwidth and computing resources, the sensor could also
push readings only when the temperature changes. So the readings of
Example 1 become:

<div class="example" id="ex_temp2">
```json
{"id": "1", "value": 5.4, "timestamp": "2024-01-01T06:00:00Z"}
{"id": "2", "value": 5.2, "timestamp": "2024-01-01T06:59:59Z"}
{"id": "3", "value": 6.1, "timestamp": "2024-01-01T09:00:00Z"}
```
</div>

As another example, consider a game during which some events occur:
<div class="example" id="ex_game">
```json
{"time": "00:00:00", "event": "Race starts"}
{"time": "00:00:05", "event": "Bob first position"}
{"time": "00:01:17", "event": "Alice first position"}
{"time": "00:01:20", "event": "Joe falls off bike"}
{"time": "00:01:27", "event": "Joe continues"}
...
{"time": "02:10:38", "event": "Race ends"}
```
</div>

Note: To do: figure out how to fit Example 3 in Snippets.

Using the Sensor, Observation, Sample, and Actuator ontology
(SOSA, part of [[!VOCAB-SSN-20171019]]), [Example 1](#ex_temp) could be written as:

<div class="example" id="ex_temp_ttl">
```turtle
<temperature/1>
  a sosa:Observation ;
  sosa:madeBySensor <temp_sensor_1> ;
  sosa:hasSimpleResult "5.4"^^xsd:decimal ;
  sosa:observedProperty: "temperature" ;
  sosa:resultTime "2024-01-01T06:00:00Z"^^xsd:dateTime .

<temperature/2>
  a sosa:Observation ;
  sosa:madeBySensor <temp_sensor_1> ;
  sosa:hasSimpleResult "5.2"^^xsd:decimal ;
  sosa:observedProperty: "temperature" ;
  sosa:resultTime "2024-01-01T06:59:59Z"^^xsd:dateTime .

<temperature/3>
  a sosa:Observation ;
  sosa:madeBySensor <temp_sensor_1> ;
  sosa:hasSimpleResult "5.2"^^xsd:decimal ;
  sosa:observedProperty: "temperature" ;
  sosa:resultTime "2024-01-01T08:00:02Z"^^xsd:dateTime .

<temperature/4>
  a sosa:Observation ;
  sosa:madeBySensor <temp_sensor_1> ;
  sosa:hasSimpleResult "6.1"^^xsd:decimal ;
  sosa:observedProperty: "temperature" ;
  sosa:resultTime "2024-01-01T09:00:00Z"^^xsd:dateTime .
```
</div>

Note: For the sake of simplicity, the RDF representation of the examples
in this section is abbreviated (e.g., no prefixes or base IRI) and the 
ontologies used are not applied entirely correct.

However, this is very verbose which is where Snippets come in!
Snippets use the [Common Data Types] (https://awslabs.github.io/SPARQL-CDTs/spec/latest.html)
to represent measurements as a Literal over a period of time:

<div class="example" id="ex_snippet_ttl">
```turtle
<snippet/2024-01-01>
  a tss:Snippet;
  tss:points "[
    { 'time': '2024-01-01T06:00:00Z', 'value': '5.4'^^xsd:double},
    { 'time': '2024-01-01T06:59:59Z', 'value': '5.2'^^xsd:double},
    { 'time': '2024-01-01T08:00:00Z', 'value': '5.2'^^xsd:double},
    { 'time': '2024-01-01T09:00:00Z', 'value': '6.1'^^xsd:double},
  ]"^^cdt:List;
  tss:period [ a dcat:PeriodOfTime;
    dcat:startDate "2024-01-01T00:00.00Z";
    dcat:endDate "2024-01-01T23:59:59Z";
  ];
  tss:about [ a sosa:Observation;
    sosa:madeBySensor <temp_sensor_1>;
    sosa:observedProperty "temperature";
  ];
.
```
</div>

# Definitions # {#definitions}

A <dfn>Time Series</dfn> is a set of data points ordered by timestamp, where each data point consists of a timestamp and corresponding value.

A <dfn>Snippet</dfn> describes a subset of a Time Series within a certain period defined by a start and end timestamp, and a description of the entity providing the data points.

# Snippet properties # {#properties}

Each Snippet has the following properties:

- `tss:points`: a `cdt:List` of data points where each data point is a `cdt:Map`.
- `tss:period`: a DCAT PeriodOfTime with a start and end ISO timestamp (including) of the period covered by `tss:points`.
- `tss:about`: an entity description which provides the data points in `tss:points`.

## Points # {#points}

`tss:points` MUST have a `cdt:List` as datatype. Each point itself MUST be a `cdt:Map` consisting
of 2 properties:
  - `time`: the ISO timestamp of the data point.
  - `value`: the value of the data point with corresponding datatype.

<div class="example" id="ex_points">
```json
[
    { 'time': '2024-01-01T06:00:00Z', 'value': '5.4'^^xsd:double},
    { 'time': '2024-01-01T06:59:59Z', 'value': '5.2'^^xsd:double},
    { 'time': '2024-01-01T08:00:00Z', 'value': '5.2'^^xsd:double},
    { 'time': '2024-01-01T09:00:00Z', 'value': '6.1'^^xsd:double},
]
```
</div>

